---
import { readdirSync } from 'fs';

const IGNORED_FILES = ['index.json', '.gitkeep'];

interface Child {
  slug: string;
  name: string;
}

interface Entry {
  crate: string;
  children: Child[];
}

let entries: Entry[] = [];

readdirSync('public/autodoc')
  .filter((crate) => !IGNORED_FILES.includes(crate))
  .reverse() // Lazy hack to bring todel first, then oprish then effis
  .forEach((crate) => {
    let children: Child[] = [];
    readdirSync(`public/autodoc/${crate}`).forEach((file) => {
      const slug = `${crate}/${file}`;
      let name = file
        .split('.')[0]
        .replace(/(?:^|_)([a-z0-9])/gm, (_, p1: string) => p1.toUpperCase())
        .replace(/[A-Z]/gm, ' $&');
      children.push({ slug, name });
    });
    entries.push({ crate, children });
  });

export interface Props {
  slug?: string;
}

let { slug } = Astro.props;
---

<div id="sidebar" class="notransition">
  <p>Why did the bean cross the road? To die_kms</p>
  <a href="/" class={slug == '/' ? 'active' : ''}>Home</a>
  <ul id="index">
    {
      entries
        .filter((entry) => entry.children.length)
        .map((entry) => (
          <details open class="category">
            <summary>{entry.crate[0].toUpperCase() + entry.crate.substring(1)}</summary>
            <li>
              <ul>
                {entry.children.map((child) => (
                  <li class="page">
                    <a href={`/reference/${child.slug}`} class={slug == child.slug ? 'active' : ''}>
                      {child.name}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          </details>
        ))
    }
  </ul>
</div>

<style>
  #sidebar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: var(--sidebar-width);
    padding: 20px 10px;
    background-color: var(--gray-200);
    box-sizing: border-box;
    transition: transform ease-in-out 250ms;
  }

  #index {
    padding: 0;
  }

  .category {
    list-style: none;
  }

  .category > summary {
    font-size: 22px;
    font-weight: normal;
    margin: 10px 10px;
    list-style: none;
  }

  .category > li > ul {
    padding: 0 10px;
  }

  .page {
    list-style: none;
    padding: 2px 0;
    margin: 0px 5px;
  }

  #sidebar a {
    color: var(--gray-600);
    font-weight: 300;
    border: unset;
  }

  #sidebar a:hover {
    color: var(--gray-700);
  }

  #sidebar.sidebar-hide {
    transform: translate(-100%, 0);
  }

  #sidebar a.active {
    color: var(--gray-500);
    font-weight: bold;
  }

  #sidebar a.active:hover {
    color: var(--gray-600);
  }

  :global(.notransition) {
    transition: unset !important;
  }
</style>
